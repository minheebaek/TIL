//6-6
class MyMathTest{
public static void main(String[]args){
     MyMath mm = new MyMath();
        long result1 = mm.add(5L, 3L);
        long result2 = mm.subtract(5L, 3L);
        long result3 = mm.multiply(5L, 3L);
        double result4 = mm.divide(5L, 3L);


        }
        }


        class MyMath{
    long add(long a, long b){
        return a+b;
    }
    long subtract(long a, long b) {return a-b;}
            long multiply(long a, long b){return a*b;}
            double divide(double a, double b){return a/b;}
        }

//6-7
class CalssStackTest{
            public static void main(String[] args) {
                firstMethod();
            }
            static void firstMethod(){
                secondMethod();
            }
            static void secondMethod(){
                System.out.println("secondMethod()");
            }
        }

//6-8
class CallStackTest2{
    public static void main(String[] args) {
        System.out.println("(main(String[] args)이 시작되었음");
        firstMethod();
        System.out.println("(main(String[] args)이 끝났음");
    }
    static void firstMethod(){
        System.out.println("firstMehtod()이 시작되었음");
        secondMethod();
        System.out.println("firstMehtod()이 끝났음");
    }

    static void secondMethod(){
        System.out.println("secondMethod이 시작되었음");
        System.out.println("secondMethod이 끝났음");
    }
}

//6-9
class Data {int x;}

class PrimitiveParamEx{
    public static void main(String[] args) {
        Data d = new Data();
        d.x=10;
        System.out.println("main x = "+d.x);

        change(d.x);
        System.out.println("After change(d.x)");
        System.out.println("main():x="+d.x);

    }

    static void change(int x){
        x=1000;
        System.out.println("change() : x="+x);
    }
}

class Data {int x;}

class ReferenceParamEx{
    public static void main(String[] args) {
        Data d = new Data();
        d.x=10;
        System.out.println("main x = "+d.x);

        change(d);
        System.out.println("After change(d.x)");
        System.out.println("main():x="+d.x);

    }

    static void change(Data d){
        d.x=1000;
        System.out.println("change() : x="+d.x);
    }
}

//6-11
class ReferenceParamEx2{
    public static void main(String[] args) {
        int[] x = {10};
        System.out.println("main x = "+x[0]);

        change(x);
        System.out.println("After change(d.x)");
        System.out.println("main():x="+x[0]);

    }

    static void change(int[] x){
        x[0]=1000;
        System.out.println("change() : x="+x[0]);
    }

    }

//6-12
class ReferenceParamEx3{
    public static void main(String[] args) {
        int[] arr = new int[] {3,2,1,6,5,4};

        printArr(arr);
        sortArr(arr);
        printArr(arr);
        System.out.println("sum="+sumArr(arr));
    }

    static void printArr(int[] arr){
        System.out.println("[");

        for(int i : arr)
            System.out.println(i+",");
        System.out.println("]");
    }

    static int sumArr(int[] arr){
        int sum=0;

        for (int i = 0; i < arr.length; i++)
            sum += arr[i];
        return sum;
    }

    static void sortArr(int[] arr){
        for (int i = 0; i < arr.length-1; i++) {
            for (int j = 0; j < arr.length-1-i; j++) {
                if(arr[j]>arr[j+1]){
                    int tmp =arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1]=tmp;
                }

            }

        }
    }
}


//6-13
class ReturnTest {
    public static void main(String[] args) {
        ReturnTest r = new ReturnTest();

        int result = r.add(3,5);
        System.out.println(result);

        int[] result2 = {0};
        r.add(3,5,result2);
        System.out.println(result2[0]);
    }
    int add(int a, int b){
        return a+b;
    }
    void add(int a, int b, int[] result){
        result[0]=a+b;
    }
}

//6-14
class Data{int x;}

class ReferenceReturnEx{
    public static void main(String[] args) {
        Data d = new Data();
        d.x=10;

        Data d2 =copy(d);
        System.out.println("d.x="+d.x);
        System.out.println("d2.x="+d2.x);

    }
    static Data copy(Data d){
        Data tmp = new Data();
        tmp.x = d.x;

        return tmp;
    }
}