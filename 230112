//boj 19944
import java.io.*;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));


            StringTokenizer st = new StringTokenizer(br.readLine());

            int n = Integer.parseInt(st.nextToken());
            int m = Integer.parseInt(st.nextToken());

            if(m==1||m==2){
                bw.write("NEWBIE!");
            } else if (m<=n&&!(m==1||m==2)) {
                bw.write("OLDBIE!");
            }else{
                bw.write("TLE!");
            }
            bw.flush();
            br.close();
            bw.close();


    }
}

//8-1
public class ExceptionEx1 {
    public static void main(String[] args) {
        try{
            try{ } catch (Exception e){}
        }
        catch (Exception e){
            // try{ } catch (Exception e); //변수 e는 두 참조변수의 영역이 서로 겹쳐서 안됨
        } //try-catch 끝
        try {

        }
        catch (Exception e){

        }//try-catch 끝
        }
}
 
//8-2
public class ExceptionEx2 {
    public static void main(String[] args) {
        int num =100;
        int result =0;

        for (int i = 0; i <10; i++) {
            result = num/(int)(Math.random()*10);
            System.out.println(result);

        }
        }
}

//8-3
public class ExceptionEx3 {
    public static void main(String[] args) {
        int num =100;
        int result =0;

        for (int i = 0; i < 10; i++) {
            try {
                result = num / (int) (Math.random() * 10);
                System.out.println(result);
            }catch (ArithmeticException e){
                System.out.println("0");
            }
        }
        }
}

//8-4
public class ExceptionEx1 {
    public static void main(String[] args) {
        System.out.println(1);
        System.out.println(2);
        try{
            System.out.println(3);
            System.out.println(4);
        }catch (Exception e){
            System.out.println(5);
        }
        System.out.println(6);
        }
}

//8-5
public class ExceptionEx5 {
    public static void main(String[] args) {
        System.out.println(1);
        System.out.println(2);
        try{
            System.out.println(3);
            System.out.println(0/0); //예외
            System.out.println(4);
        }catch (ArithmeticException e){
            System.out.println(5);
        }
        System.out.println(6);
        }
}
//8-6
public class ExceptionEx6 {
    public static void main(String[] args) {
        System.out.println(1);
        System.out.println(2);
        try{
            System.out.println(3);
            System.out.println(0/0); //예외
            System.out.println(4);
        }catch (Exception e){
            System.out.println(5);
        }
        System.out.println(6);
        }
}

//8-7
public class ExceptionEx7 {
    public static void main(String[] args) {
        System.out.println(1);
        System.out.println(2);
        try{
            System.out.println(3);
            System.out.println(0/0); //예외
            System.out.println(4);
        }catch (ArithmeticException ae){
            if(ae instanceof ArithmeticException){
                System.out.println("true");
            }
            System.out.println("ArithmeticException");
        } catch (Exception e) {
            System.out.println("Exception");
        }
        System.out.println(6);
        }
}
 
//8-8
public class ExceptionEx8 {
    public static void main(String[] args) {
        System.out.println(1);
        System.out.println(2);
        try{
            System.out.println(3);
            System.out.println(0/0); //예외
            System.out.println(4);
        }catch (ArithmeticException ae) {
            ae.printStackTrace();
            System.out.println("예외메세지 : "+ae.getMessage());
        }
        System.out.println(6);
        }
}
//8-9
public class ExceptionEx9 {
    public static void main(String[] args) {
        try {
            Exception e = new Exception("고의로 발생시켰음"); //발생시키려는 예외클래스의 객체 생성
            throw e; //예외 발생시킴
            //throw new Exception("고의로 발생시켰음");
        }catch (Exception e){
            System.out.println("에러메세지:"+e.getMessage());
            e.printStackTrace();
        }
        System.out.println("프로그램이 정상적으로 종료되었음.");
    }
}

//8-10
public class ExceptionEx10 {
    public static void main(String[] args) {
        throw new Exception(); //Exception 고의로 발생
    }
}

//8-11
public class ExceptionEx11 {
    public static void main(String[] args) {
        throw new RuntimeException(); //RuntimeException을 고의로 발생
    }
}//컴파일은 정상적으로 됨 
 
//8-12
public class ExceptionEx12 {
    public static void main(String[] args) throws Exception {
       method1();
    }
    static void method1() throws Exception{
        method2();
    }
    static void method2 throws Exception {
        throw new Exception();
    }
}

//8-13
public class ExceptionEx13 {
    public static void main(String[] args) {
    method1();
    }
    static void method1(){
        try{
            throw new Exception();
        }catch (Exception e){
            System.out.println("method1메서드에서 예외가 처리되었습니다.");
            e.printStackTrace();
        }
    }
}
//8-14
public class ExceptionEx14 {
    public static void main(String[] args) {
    try{
        method1();
    }catch (Exception e){
        System.out.println("main메서드에서 예외가 처리되었습니다.");
        e.printStackTrace();
    }
    }
    static void method1() throws Exception{
    throw new Exception();
    }
}

//8-15
import java.io.*;
public class ExceptionEx15 {
    public static void main(String[] args) {
    File f = createFile(args[0]);
        System.out.println(f.getName()+"파일이 성공적으로 생성되었습니다.");
    }
    static File createFile (String fileName){
        try{
            if(fileName==null||fileName.equals("")){
                throw new Exception("파일이름이 유효하지 않습니다.");
            }
        }catch (Exception e){
            fileName="제목없음.txt";
        }finally {
            File f = new File(fileName);
            createNewFile(f);
            return f;
        }
    }
    static void createNewFile(File f){
        try{
            f.createNewFile();
        }catch(Exception e){ }
    }
}

//8-16
import java.io.*;
public class ExceptionEx1 {
    public static void main(String[] args) {
        try {
            File f = createFile(args[0]);
            System.out.println(f.getName() + "생성되었습니다.");
        }catch (Exception e){
            System.out.println(e.getMessage()+"다시 입력해주시길 바랍니다.");
        }
    }

    static File createFile(String fileName) throws Exception {

            if (fileName == null || fileName.equals("")) {
                throw new Exception("파일이 유효하지않습니다.");
            }
            File f = new File(fileName);
            f.createNewFile();
            return f;
}
}
