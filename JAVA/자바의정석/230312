public class KindofString {
    public static void main(String[] args) {
       String s = new String("hello");
       //주어진 문자열(s)을 갖는 String인스턴스를 생성한다.
        //s="Hello";

        char[] c={'H','e','l','l','o'};
        String s1 = new String(c);
        //주어진 문자열(value)을 갖는 String인스턴스를 생성

        StringBuffer sb = new StringBuffer("Hello");
        String s2 =new String(sb);
        //StringBuffer인스턴스가 갖고 있는 문자열과 같은 내용의
        //String인스턴스를 생성한다.

        String s3 = "Hello";
        String n ="0123456";
        char c2 = s3.charAt(1);
        char c3 = n.charAt(1);
        //지정된 위치에 있는 문자를 알려준다.

        int i = "aaa".compareTo("aaa");
        int i2 = "aaa".compareTo("bbb");
        int i3 = "bbb".compareTo("aaa");
        //str과 사전순서로 비교, 같으면 0을, 사전순서 이전이면 음수를, 이후면 양수 반환

        String s4 = "Hello";
        String s5 = s4.concat(" World");
        //str을 뒤에 덧붙인다.

        String s6 = "abcdefg";
        boolean b = s6.contains("bc");
        //지정된 문자열 s이 포함되었는지 검사

        String file = "Hello.txt";
        boolean b1 = file.endsWith("txt");
        //지정된 문자열 suffix로 끝나는지 검사한다.

        String s7 = "Hello";
        boolean b2 = s7.equals("Hello");
        boolean b3 = s7.equals("hello");
        //매개변수로 받은 문자열obj과 String 인스턴스의 문자열을 비교한다.
        //obj가 String이 아니거나 문자열이 다르면 false를 반환한다.

        String s8 = "Hello";
        boolean b4 = s8.equalsIgnoreCase("HELLO");
        boolean b5 = s8.equalsIgnoreCase("hello");
        //문자열과 String인스턴스의 문자열을 대소문자 구분없이 비교한다.

        String s9 = "Hello";
        int idx1 = s9.indexOf('o');
        int idx2 = s9.indexOf('k');
        //주어진 문자ch가 문자열에 존재하는지 확인하여 위치를 알려준다.
        //못찾으면 -1을 반환한다.

        String s10 = "Hello";
        int idx3 = s10.indexOf('e',0);
        int idx4 = s10.indexOf('e',2);
        //주어진 문자ch가 문자열에 존재하는지 지정된 위치부터 확인하여
        //위치를 알려준다. 못 찾으면 -1을 반환한다.

        String s11 = "ABCEDFG";
        int idx = s11.indexOf("CD");
        //주어진 문자열이 존재하는지 확인하여 그 위치를 알려준다.
        //없으면 -1을 반환한다.

        String s12 = new String("abc");
        String s13 = new String("abc");
        boolean b6 = (s12==s13);
        boolean b7 = s12.equals(s13);
        boolean b8 = (s12.intern() == s13.intern());
        //문자열을 상수풀에 등록, 이미 상수풀에 같은 내용의 문자열이
        //있을 경우 그 문자열의 주소값을 반환

        String s14 = "java.lang.Object";
        int idx5 = s14.lastIndexOf("java");
        int idx6 = s14.indexOf('.');
        //지정된 문자 또는 문자코드를 문자열의 오른쪽 끝에서부터 찾아서
        //위치를 알려준다. 못찾으면 -1을 반환

        String s15 = "java.lang.java";
        int idx7 = s15.lastIndexOf("java");
        int idx8 = s15.indexOf("java");
        //지정된 문자열을 인스턴스의 문자열 끝에서부터 찾아서
        //위치를 알려준다. 못찾으면 1을 반환한다.

        String s16 ="Hello";
        int length = s16.length();
        //문자열의 길이를 알려준다.

        String s17 = "Hello";
        String  s18 = s17.replace('H','C');
        //문자열 중의 문자old를 새로운 문자열nw로 바꾼 문자열을 반환

        String s19 = "Hellollo";
        String s20 = s19.replace("ll","LL");
        //문자열 중의 문자열을 새로운 문자열로 모두 바꾼 문자열을 반환한다.

        String ab = "AABBAABB";
        String r = ab.replace("BB","bb");
        //문자열 중에서 지정된 문자열과 일치하는 것 중 첫번째것만 새로운 문자열로 변경한다.

        String animals = "dog,cat,bear";
        String[] arr=animals.split(",");
        //문자열을 지정된 분리자로 나누어 문자열 배열에 담아 반환한다.

        String animals2 = "dog,cat,bear";
        String[] arr2 = animals.split(",",2);
        //문자열을 지정된 분리자로 나누어 문자열 배열에 담아 반환,
        //문자열 전체를 지정된 수로 자른다.

        String s22 = "java.lang.Object";
        boolean b9 = s22.startsWith("java");
        boolean b10 = s22.startsWith("lang");

        String s21 = "java.lang.Object";
        String c1 = s21.substring(10);
        String p = s21.substring(5,9);
        //주어진 시작위치(begin)부터 끝위치(end) 범위에 포함된 문자열을 얻는다.
        //이때, 시작위치의 문자는 범위에 포함되지만, 끝위치의 문자는 포함되지 않는다.

        String s23 = "Hello";
        String s24 = s23.toLowerCase();
        //String인스턴스에 저장되어있는 모든 문자열을 소문자로 변환하여 반환

        String s25 = "Hello";
        String s26 = s25.toString();
        //String인스턴스에 저장되어 있는 문자열을 반환한다.

        String s27 = "Hello";
        String s28 = s.toUpperCase();
        //String인스턴스에 저장되어 있는 모든 문자열을 대문자로 변환하여 반환

        String s29 = "    Hello World  ";
        String s30 = s29.trim();
        //문자열의 왼쪽 끝과 오른쪽 끝에 있는 공백을 없앤 결과를 반환,
        //문자열 중간에 있는 공백은 제거되지 않음

        String b11 = String.valueOf(true);
        String c4 = String.valueOf('a');
        String i4 = String.valueOf(100);
        String l = String.valueOf(100L);
        String f = String.valueOf(10f);
        String d = String.valueOf(10.0);
        java.util.Date dd = new java.util.Date();
        String date = String.valueOf(dd);
        //지정된 값을 문자열로 변환하여 반환한다.
        //참조변수의 경우 toString()을 호출한 결과를 반환

    }
}

public class WrapperEx1 {
    public static void main(String[] args) {
       Integer i=new Integer(100);
       Integer i2=new Integer(100);

        System.out.println("i==i2 ? "+(i==i2)); //false
        System.out.println("i.equals(i2) ? "+i.equals(i2)); //true
        System.out.println("i.compareTo(i2)="+i.compareTo(i2)); //0
        System.out.println("i.toString()="+i.toString());

        System.out.println("MAX_VALUE="+Integer.MAX_VALUE);
        System.out.println("MIN_VALUE="+Integer.MIN_VALUE);
        System.out.println("SIZE="+Integer.SIZE+" bits");
        System.out.println("BYTES="+Integer.BYTES+"bytes");
        System.out.println("TYPE="+Integer.TYPE);
        


    }
}
public class WrapperEx2 {
    public static void main(String[] args) {
       int i = new Integer("100").intValue();
       int i2 = Integer.parseInt("100");
       Integer i3 = Integer.valueOf("100");

        int i4 = Integer.parseInt("100",2);
        int i5 = Integer.parseInt("100",8);
        int i6 = Integer.parseInt("100",16);
        int i7 = Integer.parseInt("FF",16);
        int i8 = Integer.parseInt("FF"); //예외 발생
        
        Integer i9 =Integer.valueOf("100",2);
        Integer i10 =Integer.valueOf("100",8);
        Integer i11 =Integer.valueOf("100",16);
        Integer i12 =Integer.valueOf("FF",16);
        Integer i13 =Integer.valueOf("FF"); //예외 발생
        
    }
}
public class WrapperEx3 {
    public static void main(String[] args) {
        int i=10;

        Integer intg =(Integer)i;
        Object obj = (Integer)i;

        Long lng = 100L;

        int i2 = intg +10;
        long l = intg +lng;

        Integer intg2 = new Integer(20);
        int i3 = (int)intg2;

        Integer intg3 = intg2 + i3;

        System.out.println("i ="+i);
        System.out.println("intg ="+intg);
        System.out.println("obj ="+obj);
        System.out.println("lng ="+lng);
        System.out.println("intg+10="+i2);
        System.out.println("intg+lng="+l);
        System.out.println("intg2 ="+intg2);
        System.out.println("i3 ="+i3);
        System.out.println("intg2 + i3="+intg3);
    }
}
