class Tv {
	boolean power;
	int channel;

	void power() {
		power = !power;
	}

	void channelUp() {
		++channel;
	}

	void channelDown() {
		--channel;
	}
}

class SmartTv extends Tv {
	boolean caption; // (on/off기능)

	void displayCaption(String text) { // text를 받아
		if (caption) { // caption이 true일때만 실행
			System.out.println(text);
		}
	}
}

public class Ex7_1 {

	public static void main(String[] args) {
		SmartTv stv = new SmartTv();
		stv.power();
		stv.channel = 5;
		stv.channelUp();
		System.out.println(stv.channel);// 6
		stv.displayCaption("hello world"); //출력 안됨

		stv.caption = true;
		stv.displayCaption("hello world"); //출력됨

	}
}

super 정리
자손 클래스에서 조상 클래스로부터 상속받은 멤버를 참조하는데 사용되는 참조변수
상속받은 멤버와 자신의 멤버와 이름이 같을때는 suepr를 붙여서 구별할 수 있다.

public class Ex7_1 {

	public static void main(String[] args) {
		Child c = new Child();
		c.method();
	}
}

class Parent {
	int x = 10; // super.x
}

class Child extends Parent {
	int x = 10; // this.x

	void method() {
		System.out.println("x=" + x);
		System.out.println("this.x=" + this.x);
		System.out.println("super.x=" + super.x);
	}
}

public class Ex7_1 {

	public static void main(String[] args) {
		Child2 c = new Child2();
		c.method();
	}
}

class Parent2 {
	int x = 10; // super.x, this.x
}

class Child2 extends Parent2 {

	void method() {
		System.out.println("x=" + x);
		System.out.println("this.x=" + this.x);
		System.out.println("super.x=" + super.x);
	}
}
this():같은 클래스의 다른 생성자를 호출
super():조상의 생성자를 호출
