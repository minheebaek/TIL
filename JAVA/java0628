package chapter3;

import java.util.Arrays;

public class 연습1 {

	public static void main(String[] args) {
		// p.139 배열의 활용 섞기
		int[] numArr = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
		System.out.println(Arrays.toString(numArr));

		for (int i = 0; i < 100; i++) {
			int n = (int) (Math.random() * 10); // 0~9 중 한값이 임의의 값
			int tmp = numArr[0]; // 배열을 tmp로 이동
			numArr[0] = numArr[n]; // 임의의수 넣기
			numArr[n] = tmp;
		}
		System.out.println(Arrays.toString(numArr));

		// toString() :1차원 배열에만 사용 가능, deepToString:다차원 배열에 사용
		int[] arr = { 0, 1, 2, 3, 4 };
		int[][] arr2D = { { 11, 12 }, { 21, 22 } };
		System.out.println(Arrays.toString(arr));
		System.out.println(Arrays.deepToString(arr2D));

		// equals():두 배열에 저장된 모든 요소 비교, 같으면 true, 다르면 false
		// equals():일차원 deepEquals():다차원 배열
		String[][] str2D = new String[][] { { "aaa", "bbb" }, { "AAA", "BBB" } };
		String[][] str2D2 = new String[][] { { "aaa", "bbb" }, { "AAA", "BBB" } };
		System.out.println(Arrays.equals(str2D, str2D2)); // false
		System.out.println(Arrays.equals(str2D, str2D)); // true

		// copyOf():배열의전체복사 copyOfRange():배열의일부복사,새로운배열반환,범위끝포함x
		int[] arr2 = { 0, 1, 2, 3, 4 };
		int[] arr2copy1 = Arrays.copyOf(arr2, arr2.length);
		int[] arr2copy2 = Arrays.copyOf(arr2, 3); // [0,1,2]
		int[] arr2copy3 = Arrays.copyOf(arr2, 8); // [0,1,2,3,4,0,0,0]
		int[] arr2copy4 = Arrays.copyOfRange(arr2, 2, 4);
		int[] arr2copy5 = Arrays.copyOfRange(arr2, 0, 8);

		// sort():배열의 정렬
		int[] arr3 = { 5, 3, 2, 7, 8 };
		Arrays.sort(arr3);// arr3을 정렬함
		System.out.println(Arrays.toString(arr3));

	}

}
